{"version":3,"file":"./app.js","mappings":"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","sources":["webpack://connect4/./src/utils.ts","webpack://connect4/./src/app.ts"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function getRandomMinMax(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n}\nexport function showElements(...elements) {\n    elements.forEach((el) => (el.style.display = 'inherit'));\n}\nexport function hideElements(...elements) {\n    elements.forEach((el) => (el.style.display = 'none'));\n}\nexport function getRanges(x, y) {\n    return {\n        VerticalBottomToTop: () => {\n            const range = [];\n            let testY = y + 0, maxRange = 3;\n            // 3 up\n            while (--testY > -1 && range.length < maxRange) {\n                range.push([x, testY]);\n            }\n            range.reverse();\n            range.push([x, y]);\n            testY = y + 0;\n            maxRange = range.length + 3;\n            // 3 down\n            while (++testY < 8 && range.length < maxRange) {\n                range.push([x, testY]);\n            }\n            return range;\n        },\n        HorizontalLeftToRight: () => {\n            const range = [];\n            let testX = x + 0, maxRange = 3;\n            // 3 left\n            while (--testX > -1 && range.length < maxRange) {\n                range.push([testX, y]);\n            }\n            range.reverse();\n            range.push([x, y]);\n            testX = x + 0;\n            maxRange = range.length + 3;\n            // 3 right\n            while (++testX < 8 && range.length < maxRange) {\n                range.push([testX, y]);\n            }\n            return range;\n        },\n        DiagonalBottomLeftToTopRight: () => {\n            const range = [];\n            let testX = x + 0, testY = y + 0, maxRange = 3;\n            // 3 left\n            while (--testX > -1 && --testY > -1 && range.length < maxRange) {\n                range.push([testX, testY]);\n            }\n            range.reverse();\n            range.push([x, y]);\n            testX = x + 0;\n            testY = y + 0;\n            maxRange = range.length + 3;\n            // 3 right\n            while (++testX < 8 && ++testY < 8 && range.length < maxRange) {\n                range.push([testX, testY]);\n            }\n            return range;\n        },\n        DiagonalTopLeftToBottomRight: () => {\n            const range = [];\n            let testX = x + 0, testY = y + 0, maxRange = 3;\n            // 3 left\n            while (--testX > -1 && ++testY < 8 && range.length < maxRange) {\n                range.push([testX, testY]);\n            }\n            range.reverse();\n            range.push([x, y]);\n            testX = x + 0;\n            testY = y + 0;\n            maxRange = range.length + 3;\n            // 3 right\n            while (++testX < 8 && --testY > -1 && range.length < maxRange) {\n                range.push([testX, testY]);\n            }\n            return range;\n        },\n    };\n}\nexport function getPossibleMatchSets(x, y) {\n    const rangeTypes = getRanges(x, y);\n    return [\n        rangeTypes.DiagonalBottomLeftToTopRight(),\n        rangeTypes.DiagonalTopLeftToBottomRight(),\n        rangeTypes.HorizontalLeftToRight(),\n        rangeTypes.VerticalBottomToTop(),\n    ]\n        .filter((points) => points.length >= 4)\n        .reduce((sets, range) => {\n        if (range.length > 4) {\n            sets.push(range.slice(0, 4));\n            sets.push(range.reverse().slice(0, 4).reverse());\n        }\n        else {\n            sets.push(range);\n        }\n        return sets;\n    }, []);\n}\nexport function wait(time, willReject = false) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => setTimeout(() => (willReject ? reject() : resolve()), time));\n    });\n}\nexport function listToArray(list) {\n    return Array.prototype.slice.call(list);\n}\nexport function getRandom(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getPossibleMatchSets, getRandom, getRandomMinMax, hideElements, showElements, wait } from './utils';\nimport './style.scss';\nconst Players = {\n    player1: 'player1',\n    player2: 'player2',\n};\nconst config = {\n    dropSpeed: 400,\n    defaultState: {\n        currentPlayer: Players.player1,\n        aiPlayers: [Players.player2],\n        history: [],\n        checkers: [],\n        active: false,\n    },\n};\nObject.freeze(Players);\nObject.freeze(config);\nfunction Connect4() {\n    const app = initialize();\n    const state = Object.assign({}, config.defaultState);\n    function initialize() {\n        const getElements = (selector) => Array.from(document.querySelectorAll(selector));\n        const getElement = (selector) => getElements(selector)[0];\n        const app = {\n            board: getElement('#board'),\n            blocker: getElement('#board .blocker'),\n            gameOver: getElement('#game-over'),\n            gameTie: getElement('#game-tie'),\n            gameStart: getElement('#game-start'),\n            resetBtns: getElements('.reset-btn'),\n            startBtn: getElement('#start-btn'),\n            buttons: getElements('#board button'),\n            spacesWrapper: getElements('#board .spaces'),\n            turnColor: getElements('.turn-color'),\n            checkerTemplate: getElement('#template .checker'),\n            checkers: [],\n        };\n        app.startBtn.onclick = start;\n        app.resetBtns.forEach((button) => (button.onclick = reset));\n        app.buttons.forEach((button, x) => (button.onclick = () => dropChecker(x)));\n        Object.freeze(app);\n        return app;\n    }\n    function isActive(value) {\n        state.active = value;\n        [...app.resetBtns, ...app.buttons].forEach((btn) => {\n            btn.disabled = value;\n        });\n    }\n    function start() {\n        hideElements(app.gameStart);\n        app.board.className = 'turn-' + state.currentPlayer;\n    }\n    function reset() {\n        if (state.active)\n            return;\n        const ms = config.dropSpeed * 2;\n        state.checkers.forEach((c) => {\n            c.style.transition = `top ${ms}ms linear`;\n            c.style.top = window.outerHeight + window.outerHeight / 2 + 'px';\n        });\n        wait(ms).then(() => state.checkers.forEach((c) => c.remove()));\n        updateState(config.defaultState);\n        app.board.className = 'turn-' + state.currentPlayer;\n        hideElements(app.gameOver);\n        hideElements(app.gameTie);\n    }\n    function getPlayer(x, y) {\n        return (state.history.find((p) => p.x === x && p.y === y) || {}).player;\n    }\n    function setChecker(x, y, player) {\n        updateState({\n            history: [...state.history, { x, y, player }],\n        });\n    }\n    function updateState(update) {\n        return Object.assign(state, update);\n    }\n    function checkForWin(x, y) {\n        const sets = getPossibleMatchSets(x, y);\n        return sets.some((set) => set.every((pos) => getPlayer(...pos) === state.currentPlayer));\n    }\n    function checkForTie() {\n        return state.history.length === 64;\n    }\n    function dropChecker(x) {\n        showElements(app.blocker);\n        const y = getAvailableY(x);\n        if (y < 0)\n            return;\n        return animateChecker(x, y).then(() => {\n            setChecker(x, y, state.currentPlayer);\n            hideElements(app.blocker);\n            if (checkForWin(x, y)) {\n                return wait(250).then(() => {\n                    showElements(app.gameOver);\n                });\n            }\n            if (checkForTie()) {\n                return wait(250).then(() => {\n                    showElements(app.gameTie);\n                });\n            }\n            toggleTurn();\n            if (state.aiPlayers.includes(state.currentPlayer)) {\n                return aiMove();\n            }\n            return Promise.resolve();\n        });\n    }\n    function animateChecker(x, y) {\n        return __awaiter(this, void 0, void 0, function* () {\n            isActive(true);\n            y = Math.abs(y - 7) + 1;\n            const ms = (config.dropSpeed / 8) * y;\n            const clone = app.checkerTemplate.cloneNode(true);\n            app.board.appendChild(clone);\n            const c = app.board.lastChild;\n            state.checkers.push(c);\n            c.style.transform = 'rotate(' + getRandom(1, 360) + 'deg)';\n            c.classList.add(state.currentPlayer);\n            setTimeout(() => {\n                c.style.transition = '';\n            }, ms + 100);\n            c.style.transition = `top ${ms}ms linear`;\n            c.style.left = x * 9 + 'vmin';\n            c.style.display = '';\n            return wait(50).then(() => {\n                c.style.top = y * 9 + 'vmin';\n                return wait(ms + 300).then(() => {\n                    isActive(false);\n                    return true;\n                });\n            });\n        });\n    }\n    function getAvailableY(x) {\n        for (let y = 0; y < 8; y++) {\n            if (!getPlayer(x, y))\n                return y;\n        }\n        return -1;\n    }\n    function aiMove() {\n        const lastPos = state.history[state.history.length - 1];\n        const sortFilterSets = (matchSets, player) => matchSets\n            .map((set) => ({\n            matches: set.filter((pos) => getPlayer(...pos) === player).length,\n            moves: set.filter((pos) => getAvailableY(pos[0]) === pos[1]),\n        }))\n            .filter((moveSets) => moveSets.moves.length > 0)\n            .sort((a, b) => {\n            if (a.matches === b.matches) {\n                if (a.moves > b.moves)\n                    return -1;\n                if (a.moves < b.moves)\n                    return 1;\n                return 0;\n            }\n            if (a.matches > b.matches)\n                return -1;\n            if (a.matches < b.matches)\n                return 1;\n            return 0;\n        });\n        const possibleMatchSets = state.history.length ? getPossibleMatchSets(lastPos.x, lastPos.y) : [];\n        let x = null;\n        const offensiveMovesSets = sortFilterSets(possibleMatchSets, state.currentPlayer);\n        // TODO: check for easy 3 matches and\n        // looks for any oponent matches and makes blocking move recomendations\n        const defensiveMovesSets = sortFilterSets(possibleMatchSets, lastPos.player);\n        if (defensiveMovesSets.length) {\n            // defensive\n            defensiveMovesSets.some((defensiveMovesSet) => {\n                let defensiveMove = defensiveMovesSet.moves[0];\n                // check if defensiveMove has a follow up win\n                // check if next y exists if it doesn't don't wory about it\n                if (defensiveMove[1] === 7) {\n                    x = defensiveMove[0];\n                    return true;\n                }\n                // check if the next y move has 3 in a row\n                const predictiveMove = [defensiveMove[0], defensiveMove[1] + 1];\n                const predictiveMatchSets = getPossibleMatchSets(predictiveMove[0], predictiveMove[1])\n                    .map((set) => ({\n                    matches: set.filter((pos) => getPlayer(...pos) === lastPos.player).length,\n                }))\n                    .sort((a, b) => {\n                    if (a.matches > b.matches)\n                        return -1;\n                    if (a.matches < b.matches)\n                        return 1;\n                    return 0;\n                });\n                if (predictiveMatchSets.every((predictiveMatchSet) => predictiveMatchSet.matches < 3)) {\n                    x = defensiveMove[0];\n                    return true;\n                }\n            });\n        }\n        if (!x) {\n            x = getRandomMinMax(0, 7);\n            while (getAvailableY(x) === -1) {\n                if (++x > 7)\n                    x = 0;\n            }\n        }\n        return dropChecker(x);\n    }\n    function toggleTurn() {\n        const currentPlayer = state.currentPlayer === Players.player1 ? Players.player2 : Players.player1;\n        updateState({ currentPlayer });\n        const currentPlayerName = currentPlayer[0].toUpperCase() + currentPlayer.substr(1);\n        app.board.className = 'turn-' + currentPlayer;\n        app.turnColor.forEach((el) => (el.innerText = currentPlayerName));\n        return Promise.resolve();\n    }\n}\nConnect4();\n"],"names":["showElements","elements","forEach","el","style","display","hideElements","getPossibleMatchSets","x","y","rangeTypes","VerticalBottomToTop","range","testY","maxRange","length","push","reverse","HorizontalLeftToRight","testX","DiagonalBottomLeftToTopRight","DiagonalTopLeftToBottomRight","getRanges","filter","points","reduce","sets","slice","wait","time","willReject","thisArg","this","_arguments","generator","Promise","resolve","reject","setTimeout","P","fulfilled","value","step","next","e","rejected","result","done","then","apply","Players","player1","player2","config","dropSpeed","defaultState","currentPlayer","aiPlayers","history","checkers","active","Object","freeze","app","getElements","selector","Array","from","document","querySelectorAll","getElement","board","blocker","gameOver","gameTie","gameStart","resetBtns","startBtn","buttons","spacesWrapper","turnColor","checkerTemplate","onclick","start","button","reset","dropChecker","initialize","state","assign","isActive","btn","disabled","className","ms","c","transition","top","window","outerHeight","remove","updateState","getPlayer","find","p","player","update","getAvailableY","Math","abs","clone","cloneNode","appendChild","lastChild","min","max","transform","ceil","floor","random","classList","add","left","animateChecker","setChecker","some","set","every","pos","checkForWin","currentPlayerName","toUpperCase","substr","innerText","toggleTurn","includes","lastPos","sortFilterSets","matchSets","map","matches","moves","moveSets","sort","a","b","possibleMatchSets","defensiveMovesSets","defensiveMovesSet","defensiveMove","predictiveMove","predictiveMatchSet","aiMove","Connect4"],"sourceRoot":""}